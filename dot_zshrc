# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
#ZSH_THEME="robbyrussell"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# CUSTOM ADDED BY REILLY
#PROMPT="%(?:%{$fg_bold[green]%}➜ :%{$fg_bold[red]%}➜ ) %{$fg[cyan]%}%~%{$reset_color%}"
#PROMPT+=' $(git_prompt_info)'

alias py="python3"
alias tree="tree -L 2 -a"
alias subl="/Applications/Sublime\ Text.app/Contents/SharedSupport/bin/subl"
alias quitBGC="launchctl unload /Library/LaunchAgents/com.paloaltonetworks.gp.pangps.plist; launchctl unload /Library/LaunchAgents/com.paloaltonetworks.gp.pangpa.plist"

alias startBGC="launchctl load /Library/LaunchAgents/com.paloaltonetworks.gp.pangps.plist; launchctl load /Library/LaunchAgents/com.paloaltonetworks.gp.pangpa.plist"

# uncomment to enable pure theme
fpath+=("$(brew --prefix)/share/zsh/site-functions")
autoload -U promptinit; promptinit
prompt pure

alias pi='ssh freret@192.168.8.235'
alias ij='open -a Intellij\ IDEA\ CE'
alias mm='/Users/reillyfreret/mm.sh'
alias sql='sqlite3'
alias ws=webstorm
alias gs='git status'
alias c='cursor'
alias gfp='git fetch -p'
alias gitrb='git removed-branches'
export JAVA_HOME=$(/usr/libexec/java_home)
export PATH=$JAVA_HOME/bin:$PATH

function rfind {
  if [[ -z "$1" ]]; then
    echo "no arguments passed; aborting"
    return
  fi
  mdfind "kMDItemFSName=='*$1*'cd"
}

export PATH="/opt/homebrew/opt/openjdk/bin:$PATH"
export PATH="/opt/homebrew/opt/node@20/bin:$PATH"

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# pnpm
export PNPM_HOME="/Users/reillyfreret/Library/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac
# pnpm end

## Needed for just autocomplete, but will pull in all of brew
## https://github.com/casey/just#shell-completion-scripts
## Init Homebrew, which adds environment variables
#eval "$(brew shellenv)"
## Add Homebrew's site-functions to fpath
#fpath=($HOMEBREW_PREFIX/share/zsh/site-functions $fpath)
#
## Needed for autosuggestions (does compinit)
#source $ZSH/oh-my-zsh.sh

autoload -Uz compinit && compinit

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/reillyfreret/Downloads/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/reillyfreret/Downloads/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/reillyfreret/Downloads/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/reillyfreret/Downloads/google-cloud-sdk/completion.zsh.inc'; fi


# git commit in the withco format
function wco() {
  if [[ -z "$1" ]]; then
    echo "Usage: wco \"commit message\""
    return 1
  fi

  # Get the current branch name
  branch=$(git rev-parse --abbrev-ref HEAD 2>/dev/null)
  if [[ $? -ne 0 ]]; then
    echo "Not a git repository or no branch found."
    return 1
  fi

  # Extract the ticket prefix (e.g., WITH-3391)
  if [[ $branch =~ (WITH-[0-9]+) ]]; then
    ticket="${match[1]}"
    git commit -m "[$ticket] RF - $1"
  else
    echo "Branch name does not contain a valid ticket (e.g., WITH-1234)."
    echo "Committing without ticket prefix..."
    git commit -m "RF - $1"
  fi
}

if command -v ngrok &>/dev/null; then
  eval "$(ngrok completion)"
fi

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

source ~/completion-for-pnpm.bash

echo "ready"
